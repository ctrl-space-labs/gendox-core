

server:
  port: 8080
  servlet:
    context-path: /gendox/api/v1
logging:
  level:
    dev.ctrlspace: DEBUG
    org.springframework: INFO
spring:
  mvc:
    format:
      date-time: yyyy-MM-dd'T'HH:mm:ss.SSSZ
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
#  datasource:
#    url: jdbc:postgresql://localhost:5432/postgres
#    username: postgres
#    password: 123456789

  datasource:
     url: ${DATABASE_URL}
     username: ${DATABASE_USERNAME}
     password: ${DATABASE_PASSWORD}

  jackson:
    serialization:
      write-dates-as-timestamps: false
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 100MB

springdoc:
  swagger-ui:
    path: /api-documentation

rsa:
  #private-key: classpath:.env/local/local-non-production-use-private_key.pem
  private-key: /var/app/current/.env/local/local-non-production-use-private_key.pem


gendox:
  documents:
    upload-dir: /tmp/gendox/documents
  #    upload-dir: s3://gendox-ducuments-bucket
  file:
    location: c:\\Users\\Giannis\\Desktop\\gendox-files\\test
    wordCount: 300
    allowed:
      extensions: .txt,.md,.rst,.pdf
  models:
    openai:
      ada2:
        key: ${OPENAI_KEY}
  domain:
    base-url: localhost:8080
    document-sections:
      get-document-sections: /documents/sections
    sections: https://domain.com/context-path/documents/sections/

# AWS

cloud:
  aws:
    accessKeyId:
    secretKey:
    region: us-east-1

s3:
  bucket:
    name: gendox-bucket-test


# Discord

discord:
  bots:
    gendox-bot:
      token: ${DISCORD_TOKEN}
  server:
    group-name: gendox-agents

version: '3'

services:

  gendox-keycloak:
    build:
      context: ../../gendox-keycloak
      dockerfile: Dockerfile
    image: gendox-keycloak:latest
    container_name: gendox-keycloak
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=${KC_DB_URL}
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}
      - KEYCLOAK_HTTP_RELATIVE_PATH=${KEYCLOAK_HTTP_RELATIVE_PATH}
      - KEYCLOAK_PORT=${KEYCLOAK_PORT}
    entrypoint: ["/bin/bash", "-c"]
    command: |
      if keytool -list -keystore /opt/keycloak/conf/server.keystore -storepass "${KEYSTORE_PASSWORD}" -alias server > /dev/null 2>&1; then
        echo "Alias 'server' exists, deleting it.";
        keytool -delete -alias server -keystore /opt/keycloak/conf/server.keystore -storepass "${KEYSTORE_PASSWORD}";
      fi && echo "Generating new keystore and key pair." && \
      keytool -genkeypair -storepass "${KEYSTORE_PASSWORD}" -storetype PKCS12 -keyalg RSA -keysize 2048 -dname "CN=localhost" -alias server -validity 365 -ext SAN:c=DNS:localhost,IP:127.0.0.1 -keystore /opt/keycloak/conf/server.keystore && \
      exec /opt/keycloak/bin/kc.sh start --http-relative-path="${KEYCLOAK_HTTP_RELATIVE_PATH}" --features=token-exchange --hostname-strict=false --https-key-store-file=/opt/keycloak/conf/server.keystore --https-key-store-password "${KEYSTORE_PASSWORD}" --spi-theme-static-max-age=600 --spi-theme-cache-themes=true --spi-theme-cache-templates=true
    networks:
      - gendox_network
      - coolify
    ports:
      - "${KEYCLOAK_PORT}:8443"
    volumes:
      - keycloak-data:/opt/keycloak/conf

networks:
  gendox_network:
  coolify:

volumes:
  postgres-data:
  keycloak-data:
